<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
    <context:component-scan base-package="common" />
	<!-- 네이버 -->
	<beans:bean id="naverLoginBO" class="naver.NaverLoginBO" /> 

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 최대 용량설정 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="104857600"></beans:property>
	</beans:bean>

	<!-- 업로드 패스 설정 -->
	 <beans:bean class="java.lang.String" id="uploadPath">

	<beans:constructor-arg value="faint1122"> </beans:constructor-arg>

</beans:bean>
	
	<!-- 업로드 패스 설정 -->
<!-- 	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="../resources/upload/"></beans:constructor-arg>
	</beans:bean> -->
	
	<context:component-scan base-package="com.faint.sns" />
	
	
	
	<!-- auth interceptor : 로그인 안한 유저의 경우 login창으로 이동시킴 -->
	<beans:bean id="authInterceptor" class="com.faint.interceptor.AuthInterceptor" ></beans:bean>
	<!-- 로그인 interceptor bean 생성(session에 uservo저장) -->
	<beans:bean id="loginInterceptor" class="com.faint.interceptor.LoginInterceptor" ></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/user/loginPost" />
			<beans:ref bean="loginInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/main" />
			<beans:ref bean="authInterceptor" />
		</interceptor>
	</interceptors>

 </beans:beans>
