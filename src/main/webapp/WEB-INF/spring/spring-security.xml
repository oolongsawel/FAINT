<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
								http://www.springframework.org/schema/beans/spring-beans.xsd 
								http://www.springframework.org/schema/security 
								http://www.springframework.org/schema/security/spring-security.xsd">

	<beans:bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
		
		<beans:bean id="customeAuthenticationProvider" class="handler.CustomAuthenticationProvider"></beans:bean>
		

		
		
   	  
   	  
     <authentication-manager>
     	<authentication-provider user-service-ref ="customUserDetailsService">
     		<password-encoder ref="bcryptPasswordEncoder"/>
     	</authentication-provider>
     </authentication-manager>
		
	 <http auto-config='true'>
	    		<intercept-url pattern="/manager/**" access="hasAuthority('USER_MANAGER')" />
		<!--<security:intercept-url pattern="/manager/**" access="hasAuthority(ROLE_USER)" /> hasRole/hasAuthority 같은뜻 저권한 가지만 사람만 접근가 -->
			<intercept-url pattern="/member/**" access="hasAuthority('USER')" /> <!-- 인증된 사람만 접근 가능  -->
			<intercept-url pattern="/user/**" access="hasAuthority('USER')" /> <!-- 인증된 사람만 접근 가능  -->
			<intercept-url pattern="/**" access="permitAll" />
		<form-login 
				login-page="/login" 
				default-target-url="/user"
				authentication-failure-url="/login?fail=true"/>
		<logout logout-success-url="/login" />
	</http>
	 

           
</beans:beans>